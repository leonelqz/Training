Traceback (most recent call last):
  File "/usr/local/python/3.10.13/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/codespace/.local/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/local/python/3.10.13/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/codespace/.local/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import hvplot.xarray
import xarray as xr

ds = xr.open_dataset("/Training/ssta_prueba.nc")
plot = ds.anom.hvplot(x="lon", y="lat", cmap="bwr", clim=(-1000, 1000))
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/file_manager.py:211[0m, in [0;36mCachingFileManager._acquire_with_cache_info[0;34m(self, needs_lock)[0m
[1;32m    210[0m [38;5;28;01mtry[39;00m:
[0;32m--> 211[0m     file [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_cache[49m[43m[[49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_key[49m[43m][49m
[1;32m    212[0m [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m:

File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/lru_cache.py:56[0m, in [0;36mLRUCache.__getitem__[0;34m(self, key)[0m
[1;32m     55[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39m_lock:
[0;32m---> 56[0m     value [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_cache[49m[43m[[49m[43mkey[49m[43m][49m
[1;32m     57[0m     [38;5;28mself[39m[38;5;241m.[39m_cache[38;5;241m.[39mmove_to_end(key)

[0;31mKeyError[0m: [<function _open_scipy_netcdf at 0x7f6d1df1bac0>, ('/Training/ssta_prueba.nc',), 'r', (('mmap', None), ('version', 2)), 'f0754c2a-1398-43f6-802c-41c9441d0219']

During handling of the above exception, another exception occurred:

[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[3], line 4[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mhvplot[39;00m[38;5;21;01m.[39;00m[38;5;21;01mxarray[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mxarray[39;00m [38;5;28;01mas[39;00m [38;5;21;01mxr[39;00m
[0;32m----> 4[0m ds [38;5;241m=[39m [43mxr[49m[38;5;241;43m.[39;49m[43mopen_dataset[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43m/Training/ssta_prueba.nc[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      5[0m plot [38;5;241m=[39m ds[38;5;241m.[39manom[38;5;241m.[39mhvplot(x[38;5;241m=[39m[38;5;124m"[39m[38;5;124mlon[39m[38;5;124m"[39m, y[38;5;241m=[39m[38;5;124m"[39m[38;5;124mlat[39m[38;5;124m"[39m, cmap[38;5;241m=[39m[38;5;124m"[39m[38;5;124mbwr[39m[38;5;124m"[39m, clim[38;5;241m=[39m([38;5;241m-[39m[38;5;241m1000[39m, [38;5;241m1000[39m))

File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/api.py:573[0m, in [0;36mopen_dataset[0;34m(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, inline_array, chunked_array_type, from_array_kwargs, backend_kwargs, **kwargs)[0m
[1;32m    561[0m decoders [38;5;241m=[39m _resolve_decoders_kwargs(
[1;32m    562[0m     decode_cf,
[1;32m    563[0m     open_backend_dataset_parameters[38;5;241m=[39mbackend[38;5;241m.[39mopen_dataset_parameters,
[0;32m   (...)[0m
[1;32m    569[0m     decode_coords[38;5;241m=[39mdecode_coords,
[1;32m    570[0m )
[1;32m    572[0m overwrite_encoded_chunks [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124moverwrite_encoded_chunks[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[0;32m--> 573[0m backend_ds [38;5;241m=[39m [43mbackend[49m[38;5;241;43m.[39;49m[43mopen_dataset[49m[43m([49m
[1;32m    574[0m [43m    [49m[43mfilename_or_obj[49m[43m,[49m
[1;32m    575[0m [43m    [49m[43mdrop_variables[49m[38;5;241;43m=[39;49m[43mdrop_variables[49m[43m,[49m
[1;32m    576[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mdecoders[49m[43m,[49m
[1;32m    577[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m    578[0m [43m[49m[43m)[49m
[1;32m    579[0m ds [38;5;241m=[39m _dataset_from_backend_dataset(
[1;32m    580[0m     backend_ds,
[1;32m    581[0m     filename_or_obj,
[0;32m   (...)[0m
[1;32m    591[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[1;32m    592[0m )
[1;32m    593[0m [38;5;28;01mreturn[39;00m ds

File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/scipy_.py:332[0m, in [0;36mScipyBackendEntrypoint.open_dataset[0;34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, mode, format, group, mmap, lock)[0m
[1;32m    330[0m store_entrypoint [38;5;241m=[39m StoreBackendEntrypoint()
[1;32m    331[0m [38;5;28;01mwith[39;00m close_on_error(store):
[0;32m--> 332[0m     ds [38;5;241m=[39m [43mstore_entrypoint[49m[38;5;241;43m.[39;49m[43mopen_dataset[49m[43m([49m
[1;32m    333[0m [43m        [49m[43mstore[49m[43m,[49m
[1;32m    334[0m [43m        [49m[43mmask_and_scale[49m[38;5;241;43m=[39;49m[43mmask_and_scale[49m[43m,[49m
[1;32m    335[0m [43m        [49m[43mdecode_times[49m[38;5;241;43m=[39;49m[43mdecode_times[49m[43m,[49m
[1;32m    336[0m [43m        [49m[43mconcat_characters[49m[38;5;241;43m=[39;49m[43mconcat_characters[49m[43m,[49m
[1;32m    337[0m [43m        [49m[43mdecode_coords[49m[38;5;241;43m=[39;49m[43mdecode_coords[49m[43m,[49m
[1;32m    338[0m [43m        [49m[43mdrop_variables[49m[38;5;241;43m=[39;49m[43mdrop_variables[49m[43m,[49m
[1;32m    339[0m [43m        [49m[43muse_cftime[49m[38;5;241;43m=[39;49m[43muse_cftime[49m[43m,[49m
[1;32m    340[0m [43m        [49m[43mdecode_timedelta[49m[38;5;241;43m=[39;49m[43mdecode_timedelta[49m[43m,[49m
[1;32m    341[0m [43m    [49m[43m)[49m
[1;32m    342[0m [38;5;28;01mreturn[39;00m ds

File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/store.py:43[0m, in [0;36mStoreBackendEntrypoint.open_dataset[0;34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta)[0m
[1;32m     29[0m [38;5;28;01mdef[39;00m [38;5;21mopen_dataset[39m(  [38;5;66;03m# type: ignore[override]  # allow LSP violation, not supporting **kwargs[39;00m
[1;32m     30[0m     [38;5;28mself[39m,
[1;32m     31[0m     filename_or_obj: [38;5;28mstr[39m [38;5;241m|[39m os[38;5;241m.[39mPathLike[Any] [38;5;241m|[39m BufferedIOBase [38;5;241m|[39m AbstractDataStore,
[0;32m   (...)[0m
[1;32m     39[0m     decode_timedelta[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m     40[0m ) [38;5;241m-[39m[38;5;241m>[39m Dataset:
[1;32m     41[0m     [38;5;28;01massert[39;00m [38;5;28misinstance[39m(filename_or_obj, AbstractDataStore)
[0;32m---> 43[0m     [38;5;28mvars[39m, attrs [38;5;241m=[39m [43mfilename_or_obj[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43m)[49m
[1;32m     44[0m     encoding [38;5;241m=[39m filename_or_obj[38;5;241m.[39mget_encoding()
[1;32m     46[0m     [38;5;28mvars[39m, attrs, coord_names [38;5;241m=[39m conventions[38;5;241m.[39mdecode_cf_variables(
[1;32m     47[0m         [38;5;28mvars[39m,
[1;32m     48[0m         attrs,
[0;32m   (...)[0m
[1;32m     55[0m         decode_timedelta[38;5;241m=[39mdecode_timedelta,
[1;32m     56[0m     )

File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/common.py:251[0m, in [0;36mAbstractDataStore.load[0;34m(self)[0m
[1;32m    229[0m [38;5;28;01mdef[39;00m [38;5;21mload[39m([38;5;28mself[39m):
[1;32m    230[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m    231[0m [38;5;124;03m    This loads the variables and attributes simultaneously.[39;00m
[1;32m    232[0m [38;5;124;03m    A centralized loading function makes it easier to create[39;00m
[0;32m   (...)[0m
[1;32m    248[0m [38;5;124;03m    are requested, so care should be taken to make sure its fast.[39;00m
[1;32m    249[0m [38;5;124;03m    """[39;00m
[1;32m    250[0m     variables [38;5;241m=[39m FrozenDict(
[0;32m--> 251[0m         (_decode_variable_name(k), v) [38;5;28;01mfor[39;00m k, v [38;5;129;01min[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mget_variables[49m[43m([49m[43m)[49m[38;5;241m.[39mitems()
[1;32m    252[0m     )
[1;32m    253[0m     attributes [38;5;241m=[39m FrozenDict([38;5;28mself[39m[38;5;241m.[39mget_attrs())
[1;32m    254[0m     [38;5;28;01mreturn[39;00m variables, attributes

File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/scipy_.py:198[0m, in [0;36mScipyDataStore.get_variables[0;34m(self)[0m
[1;32m    196[0m [38;5;28;01mdef[39;00m [38;5;21mget_variables[39m([38;5;28mself[39m):
[1;32m    197[0m     [38;5;28;01mreturn[39;00m FrozenDict(
[0;32m--> 198[0m         (k, [38;5;28mself[39m[38;5;241m.[39mopen_store_variable(k, v)) [38;5;28;01mfor[39;00m k, v [38;5;129;01min[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mds[49m[38;5;241m.[39mvariables[38;5;241m.[39mitems()
[1;32m    199[0m     )

File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/scipy_.py:187[0m, in [0;36mScipyDataStore.ds[0;34m(self)[0m
[1;32m    185[0m [38;5;129m@property[39m
[1;32m    186[0m [38;5;28;01mdef[39;00m [38;5;21mds[39m([38;5;28mself[39m):
[0;32m--> 187[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_manager[49m[38;5;241;43m.[39;49m[43macquire[49m[43m([49m[43m)[49m

File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/file_manager.py:193[0m, in [0;36mCachingFileManager.acquire[0;34m(self, needs_lock)[0m
[1;32m    178[0m [38;5;28;01mdef[39;00m [38;5;21macquire[39m([38;5;28mself[39m, needs_lock[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[1;32m    179[0m [38;5;250m    [39m[38;5;124;03m"""Acquire a file object from the manager.[39;00m
[1;32m    180[0m 
[1;32m    181[0m [38;5;124;03m    A new file is only opened if it has expired from the[39;00m
[0;32m   (...)[0m
[1;32m    191[0m [38;5;124;03m        An open file object, as returned by ``opener(*args, **kwargs)``.[39;00m
[1;32m    192[0m [38;5;124;03m    """[39;00m
[0;32m--> 193[0m     file, _ [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_acquire_with_cache_info[49m[43m([49m[43mneeds_lock[49m[43m)[49m
[1;32m    194[0m     [38;5;28;01mreturn[39;00m file

File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/file_manager.py:217[0m, in [0;36mCachingFileManager._acquire_with_cache_info[0;34m(self, needs_lock)[0m
[1;32m    215[0m     kwargs [38;5;241m=[39m kwargs[38;5;241m.[39mcopy()
[1;32m    216[0m     kwargs[[38;5;124m"[39m[38;5;124mmode[39m[38;5;124m"[39m] [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_mode
[0;32m--> 217[0m file [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_opener[49m[43m([49m[38;5;241;43m*[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_args[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    218[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_mode [38;5;241m==[39m [38;5;124m"[39m[38;5;124mw[39m[38;5;124m"[39m:
[1;32m    219[0m     [38;5;66;03m# ensure file doesn't get overridden when opened again[39;00m
[1;32m    220[0m     [38;5;28mself[39m[38;5;241m.[39m_mode [38;5;241m=[39m [38;5;124m"[39m[38;5;124ma[39m[38;5;124m"[39m

File [0;32m/usr/local/python/3.10.13/lib/python3.10/site-packages/xarray/backends/scipy_.py:126[0m, in [0;36m_open_scipy_netcdf[0;34m(filename, mode, mmap, version)[0m
[1;32m    123[0m     filename [38;5;241m=[39m io[38;5;241m.[39mBytesIO(filename)
[1;32m    125[0m [38;5;28;01mtry[39;00m:
[0;32m--> 126[0m     [38;5;28;01mreturn[39;00m [43mscipy[49m[38;5;241;43m.[39;49m[43mio[49m[38;5;241;43m.[39;49m[43mnetcdf_file[49m[43m([49m[43mfilename[49m[43m,[49m[43m [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m[43m [49m[43mmmap[49m[38;5;241;43m=[39;49m[43mmmap[49m[43m,[49m[43m [49m[43mversion[49m[38;5;241;43m=[39;49m[43mversion[49m[43m)[49m
[1;32m    127[0m [38;5;28;01mexcept[39;00m [38;5;167;01mTypeError[39;00m [38;5;28;01mas[39;00m e:  [38;5;66;03m# netcdf3 message is obscure in this case[39;00m
[1;32m    128[0m     errmsg [38;5;241m=[39m e[38;5;241m.[39margs[[38;5;241m0[39m]

File [0;32m~/.local/lib/python3.10/site-packages/scipy/io/_netcdf.py:247[0m, in [0;36mnetcdf_file.__init__[0;34m(self, filename, mode, mmap, version, maskandscale)[0m
[1;32m    245[0m [38;5;28mself[39m[38;5;241m.[39mfilename [38;5;241m=[39m filename
[1;32m    246[0m omode [38;5;241m=[39m [38;5;124m'[39m[38;5;124mr+[39m[38;5;124m'[39m [38;5;28;01mif[39;00m mode [38;5;241m==[39m [38;5;124m'[39m[38;5;124ma[39m[38;5;124m'[39m [38;5;28;01melse[39;00m mode
[0;32m--> 247[0m [38;5;28mself[39m[38;5;241m.[39mfp [38;5;241m=[39m [38;5;28;43mopen[39;49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfilename[49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;132;43;01m%s[39;49;00m[38;5;124;43mb[39;49m[38;5;124;43m'[39;49m[43m [49m[38;5;241;43m%[39;49m[43m [49m[43momode[49m[43m)[49m
[1;32m    248[0m [38;5;28;01mif[39;00m mmap [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    249[0m     [38;5;66;03m# Mmapped files on PyPy cannot be usually closed[39;00m
[1;32m    250[0m     [38;5;66;03m# before the GC runs, so it's better to use mmap=False[39;00m
[1;32m    251[0m     [38;5;66;03m# as the default.[39;00m
[1;32m    252[0m     mmap [38;5;241m=[39m ([38;5;129;01mnot[39;00m IS_PYPY)

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '/Training/ssta_prueba.nc'

